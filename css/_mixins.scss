@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
          border-radius: $radius;
}

@mixin background-gradient($start, $end) {
  background: -webkit-gradient(linear, 0% 0%, 0% 100%, from($start), to($end));
  background: -webkit-linear-gradient(top, $start, $end);
  background: -moz-linear-gradient(top, $start, $end);
  background: -o-linear-gradient(top, $start, $end);
  background: linear-gradient(top, $start, $end);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='$start', endColorstr='$end');
  background-color: $start;
}

@mixin transition($transition...) {
  -webkit-transition: $transition;
     -moz-transition: $transition;
      -ms-transition: $transition;
       -o-transition: $transition;
          transition: $transition;
}

@mixin transform($value...) {
  -webkit-transform: $value;
     -moz-transform: $value;
      -ms-transform: $value;
       -o-transform: $value;
          transform: $value;
}

@mixin transform-origin($value...) {
  -webkit-transform-origin: $value;
     -moz-transform-origin: $value;
      -ms-transform-origin: $value;
       -o-transform-origin: $value;
          transform-origin: $value;
}

@mixin filter($value...) {
  -webkit-filter: $value;
     -moz-filter: $value;
      -ms-filter: $value;
       -o-filter: $value;
          filter: $value;
}

$breakpoints: (
  'tiny':   ( max-width:  360px ),
  'small':  ( max-width:  500px ),
  'medium': ( max-width:  992px ),
  'large':  ( max-width: 1200px )
);

@mixin breakpoint($name) {
  @if map-has-key($breakpoints, $name) {
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }
  @else {
    @media ($name) {
      @content;
    }
  }
}
